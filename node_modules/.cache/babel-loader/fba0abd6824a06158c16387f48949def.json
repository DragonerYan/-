{"remainingRequest":"D:\\github007\\vue2-element-touzi-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\github007\\vue2-element-touzi-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\github007\\vue2-element-touzi-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\github007\\vue2-element-touzi-admin\\src\\page\\fundList\\components\\addFundDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\github007\\vue2-element-touzi-admin\\src\\page\\fundList\\components\\addFundDialog.vue","mtime":1604132537161},{"path":"D:\\github007\\vue2-element-touzi-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\github007\\vue2-element-touzi-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\github007\\vue2-element-touzi-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\github007\\vue2-element-touzi-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _toConsumableArray from \"D:\\\\github007\\\\vue2-element-touzi-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _defineProperty from \"D:\\\\github007\\\\vue2-element-touzi-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapGetters } from 'vuex';\nimport { addMoney, updateMoney } from \"@/api/money\";\nimport AreaJson from \"@/assets/datas/area.json\";\nexport default {\n  name: 'addFundDialogs',\n  data: function data() {\n    var validateData = function validateData(rule, value, callback) {\n      if (value === '') {\n        var text;\n\n        if (rule.field == \"income\") {\n          text = '收入';\n        } else if (rule.field == \"pay\") {\n          text = '支出';\n        } else if (rule.field == 'accoutCash') {\n          text = '账户现金';\n        }\n\n        callback(new Error(text + '不能为空~'));\n      } else {\n        var numReg = /^[0-9]+.?[0-9]*$/;\n\n        if (!numReg.test(value)) {\n          callback(new Error('请输入正数值'));\n        } else {\n          callback();\n        }\n      }\n    };\n\n    return {\n      areaData: [],\n      isVisible: this.isShow,\n      form: {\n        incomePayType: '',\n        address: [],\n        tableAddress: '',\n        username: '',\n        income: '',\n        pay: '',\n        accoutCash: '',\n        remarks: ''\n      },\n      payType: [{\n        label: '提现',\n        value: '0'\n      }, {\n        label: '提现手续费',\n        value: '1'\n      }, {\n        label: '提现锁定',\n        value: '2'\n      }, {\n        label: '理财服务退出',\n        value: '3'\n      }, {\n        label: '购买宜定盈',\n        value: '4'\n      }, {\n        label: '充值',\n        value: '5'\n      }, {\n        label: '优惠券',\n        value: '6'\n      }, {\n        label: '充值礼券',\n        value: '7'\n      }, {\n        label: '转账',\n        value: '8'\n      }],\n      form_rules: {\n        username: [{\n          required: true,\n          message: '用户名不能为空！',\n          trigger: 'blur'\n        }],\n        income: [{\n          required: true,\n          validator: validateData,\n          trigger: 'blur'\n        }],\n        pay: [{\n          required: true,\n          validator: validateData,\n          trigger: 'blur'\n        }],\n        accoutCash: [{\n          required: true,\n          validator: validateData,\n          trigger: 'blur'\n        }],\n        incomePayType: [{\n          required: true,\n          message: '请选择收支类型',\n          trigger: 'change'\n        }],\n        address: [{\n          required: true,\n          message: '请选择籍贯',\n          trigger: 'change'\n        }]\n      },\n      //详情弹框信息\n      dialog: {\n        width: '400px',\n        formLabelWidth: '120px'\n      }\n    };\n  },\n  props: {\n    isShow: Boolean,\n    dialogRow: Object\n  },\n  computed: _objectSpread({}, mapGetters(['addFundDialog'])),\n  created: function created() {\n    this.areaData = AreaJson;\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (this.addFundDialog.type === 'edit') {\n      this.form = this.dialogRow;\n      console.log(this.form);\n      this.form.incomePayType = this.dialogRow.incomePayType.toString(); // this.form.address = [\"120000\", \"120200\", \"120223\"]\n    } else {\n      this.$nextTick(function () {\n        _this.$refs['form'].resetFields();\n      });\n    }\n  },\n  methods: {\n    getCascaderObj: function getCascaderObj(val, opt) {\n      return val.map(function (value, index, array) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = opt[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var item = _step.value;\n\n            if (item.value == value) {\n              opt = item.children;\n              return item.label;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return null;\n      });\n    },\n    handleChange: function handleChange(value) {\n      console.log(_toConsumableArray(value)); // [\"120000\", \"120200\", \"120223\"]\n\n      this.form.address = _toConsumableArray(value);\n      var vals = this.getCascaderObj(_toConsumableArray(value), this.areaData); // arr\n\n      this.form.tableAddress = vals.join(',').replace(/,/g, '');\n    },\n    closeDialog: function closeDialog() {\n      this.$emit('closeDialog');\n    },\n    //表单提交\n    onSubmit: function onSubmit(form) {\n      var _this2 = this;\n\n      this.$refs[form].validate(function (valid) {\n        if (valid) {\n          //表单数据验证完成之后，提交数据;\n          var formData = _this2[form];\n          var para = Object.assign({}, formData);\n          console.log(para); // edit\n\n          if (_this2.addFundDialog.type === 'edit') {\n            updateMoney(para).then(function (res) {\n              _this2.$message({\n                message: '修改成功',\n                type: 'success'\n              });\n\n              _this2.$refs['form'].resetFields();\n\n              _this2.isVisible = false;\n\n              _this2.$emit('getFundList');\n            });\n          } else {\n            // add\n            addMoney(para).then(function (res) {\n              _this2.$message({\n                message: '新增成功',\n                type: 'success'\n              });\n\n              _this2.$refs['form'].resetFields();\n\n              _this2.isVisible = false;\n\n              _this2.$emit('getFundList');\n            });\n          }\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["addFundDialog.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <el-dialog \r\n        :visible.sync=\"isVisible\"\r\n        :title=\"addFundDialog.title\" \r\n        :close-on-click-modal='false'\r\n        :close-on-press-escape='false'\r\n        :modal-append-to-body=\"false\"\r\n        @close=\"closeDialog\">\r\n        <div class=\"form\">\r\n            <el-form \r\n                ref=\"form\" \r\n                :model=\"form\"\r\n                :rules=\"form_rules\"\r\n                :label-width=\"dialog.formLabelWidth\" \r\n                style=\"margin:10px;width:auto;\">\r\n                <el-form-item prop='incomePayType' label=\"收支类型:\" >\r\n                    <el-select v-model=\"form.incomePayType\" placeholder=\"收支类型\">\r\n                        <el-option\r\n                            v-for=\"item in payType\"\r\n                            :key=\"item.value\"\r\n                            :label=\"item.label\"\r\n                            :value=\"item.value\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n\r\n                <el-form-item prop='username' label=\"用户名:\">\r\n                    <el-input type=\"text\" v-model=\"form.username\"></el-input>\r\n                </el-form-item>\r\n                \r\n                 <el-form-item prop=\"address\" label=\"籍贯:\">\r\n                    <el-cascader\r\n                        v-model=\"form.address\"\r\n                        placeholder=\"请选择地区\"\r\n                        :props=\"{ expandTrigger: 'hover'}\"\r\n                        :options=\"areaData\"\r\n                        @change=\"handleChange\"\r\n                        ref=\"cascaderAddr\">\r\n                    </el-cascader>\r\n                </el-form-item>\r\n\r\n                <el-form-item prop='income'  label=\"收入:\">\r\n                    <el-input v-model.number=\"form.income\"></el-input>\r\n                </el-form-item>\r\n\r\n                <el-form-item prop='pay' label=\"支出:\">\r\n                    <el-input v-model.number=\"form.pay\"></el-input>\r\n                </el-form-item>\r\n\r\n                <el-form-item prop='accoutCash' label=\"账户现金:\">\r\n                    <el-input v-model.number=\"form.accoutCash\"></el-input>\r\n                </el-form-item>\r\n\r\n                <el-form-item label=\"备注:\">\r\n                    <el-input type=\"textarea\" v-model=\"form.remarks\"></el-input>\r\n                </el-form-item>\r\n\r\n                <el-form-item  class=\"text_right\">\r\n                    <el-button @click=\"isVisible = false\">取 消</el-button>\r\n                    <el-button type=\"primary\" @click='onSubmit(\"form\")'>提  交</el-button>\r\n                </el-form-item>\r\n\r\n            </el-form>\r\n        </div>\r\n    </el-dialog>\r\n</template>\r\n\r\n<script>\r\n   import { mapState, mapGetters } from 'vuex'\r\n   import { addMoney,updateMoney } from \"@/api/money\";\r\n   import AreaJson from \"@/assets/datas/area.json\"\r\n\r\n  export default {\r\n      name:'addFundDialogs',\r\n      data(){\r\n          let validateData = (rule, value, callback) => {\r\n                if(value === ''){\r\n                    let text;\r\n                    if(rule.field == \"income\"){\r\n                        text='收入';\r\n                    }else if(rule.field == \"pay\"){\r\n                        text='支出';\r\n                    }else if(rule.field == 'accoutCash'){\r\n                        text='账户现金';\r\n                    }\r\n                    callback(new Error(text+'不能为空~'));\r\n                }else{\r\n                   let numReg = /^[0-9]+.?[0-9]*$/;\r\n                   if(!numReg.test(value)){\r\n                      callback(new Error('请输入正数值'));\r\n                   }else{\r\n                      callback();\r\n                   }\r\n                }\r\n            };\r\n          return {\r\n            areaData:[],\r\n            isVisible: this.isShow,\r\n            form:{\r\n                incomePayType:'',\r\n                address:[],\r\n                tableAddress:'',\r\n                username: '',\r\n                income: '',\r\n                pay:'',\r\n                accoutCash:'',\r\n                remarks: ''\r\n            },\r\n            payType:[\r\n                {label:'提现',value:'0'},\r\n                {label:'提现手续费',value:'1'},\r\n                {label:'提现锁定',value:'2'},\r\n                {label:'理财服务退出',value:'3'},\r\n                {label:'购买宜定盈',value:'4'},\r\n                {label:'充值',value:'5'},\r\n                {label:'优惠券',value:'6'},\r\n                {label:'充值礼券',value:'7'},\r\n                {label:'转账',value:'8'}\r\n            ],\r\n            form_rules: {\r\n                username   : [\r\n                    {required: true, message : '用户名不能为空！',trigger : 'blur'}\r\n                ],\r\n                income   : [\r\n                    { required: true, validator:validateData,trigger: 'blur'}\r\n                ],\r\n                pay   : [\r\n                    { required: true, validator:validateData,trigger: 'blur'}\r\n                ],\r\n                accoutCash   : [\r\n                    { required: true, validator:validateData,trigger: 'blur'}\r\n                ],\r\n                incomePayType:[\r\n                    { required: true, message: '请选择收支类型', trigger: 'change' }\r\n                ],\r\n                address:[\r\n                    { required: true, message: '请选择籍贯', trigger: 'change' }\r\n                ]\r\n            },\r\n            //详情弹框信息\r\n            dialog: {\r\n                width:'400px',\r\n                formLabelWidth:'120px'\r\n            }\r\n          }\r\n      },\r\n      props:{\r\n          isShow:Boolean,\r\n          dialogRow:Object\r\n      },\r\n      computed:{\r\n        ...mapGetters(['addFundDialog']),\r\n      },\r\n      created(){\r\n            this.areaData = AreaJson\r\n      },\r\n      mounted(){\r\n        if(this.addFundDialog.type === 'edit'){\r\n            this.form = this.dialogRow;\r\n            console.log(this.form);\r\n            this.form.incomePayType = (this.dialogRow.incomePayType).toString();\r\n            // this.form.address = [\"120000\", \"120200\", \"120223\"]\r\n\r\n        }else{\r\n            this.$nextTick(() => {\r\n                this.$refs['form'].resetFields()\r\n            })\r\n        }\r\n      },\r\n      methods:{\r\n          getCascaderObj(val, opt){\r\n            return val.map(function (value, index, array) {\r\n                for (var item of opt) {\r\n                    if (item.value == value) { \r\n                        opt = item.children; \r\n                        return item.label; \r\n                    }\r\n                }\r\n                return null;\r\n            });\r\n         },\r\n          handleChange(value) {\r\n            console.log([...value]); // [\"120000\", \"120200\", \"120223\"]\r\n            this.form.address = [...value];\r\n            let vals = this.getCascaderObj([...value], this.areaData); // arr\r\n            this.form.tableAddress = vals.join(',').replace(/,/g,'');\r\n          },\r\n          closeDialog(){\r\n              this.$emit('closeDialog');\r\n          },\r\n          //表单提交\r\n          onSubmit(form){\r\n            this.$refs[form].validate((valid) => {\r\n                if (valid) {//表单数据验证完成之后，提交数据;\r\n                    let formData = this[form];\r\n                    const para = Object.assign({}, formData)\r\n                    console.log(para);\r\n                    // edit\r\n                    if(this.addFundDialog.type === 'edit'){\r\n                        updateMoney(para).then(res => {\r\n                            this.$message({\r\n                                message: '修改成功',\r\n                                type: 'success'\r\n                            })\r\n                            this.$refs['form'].resetFields()\r\n                            this.isVisible = false\r\n                            this.$emit('getFundList');\r\n                       })\r\n                    }else{\r\n                        // add\r\n                        addMoney(para).then(res => {\r\n                            this.$message({\r\n                                message: '新增成功',\r\n                                type: 'success'\r\n                            })\r\n                            this.$refs['form'].resetFields()\r\n                            this.isVisible = false\r\n                            this.$emit('getFundList');\r\n                       })\r\n                    }\r\n                }\r\n            })\r\n          }\r\n      }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n    .search_container{\r\n        margin-bottom: 20px;\r\n    }\r\n    .btnRight{\r\n        float: right;\r\n        margin-right: 0px !important;\r\n    }\r\n    .searchArea{\r\n        background:rgba(255,255,255,1);\r\n        border-radius:2px;\r\n        padding: 18px 18px 0;\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/page/fundList/components"}]}