{"remainingRequest":"D:\\github007\\vue2-element-touzi-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\github007\\vue2-element-touzi-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\github007\\vue2-element-touzi-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\github007\\vue2-element-touzi-admin\\src\\page\\fundData\\incomePayPosition.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\github007\\vue2-element-touzi-admin\\src\\page\\fundData\\incomePayPosition.vue","mtime":1604132537159},{"path":"D:\\github007\\vue2-element-touzi-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\github007\\vue2-element-touzi-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\github007\\vue2-element-touzi-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\github007\\vue2-element-touzi-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\nimport echarts from 'echarts';\nexport default {\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.setInit(); // 保证页面在放大或缩小时，也能够动态的显示数据\n\n    window.onresize = function () {\n      _this.setInit();\n    };\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (!this.chart) {\n      return;\n    }\n\n    this.chart.dispose();\n    this.chart = null;\n  },\n  methods: {\n    setInit: function setInit() {\n      var _this2 = this;\n\n      this.$nextTick(function () {\n        _this2.$refs.fillcontainer.style.height = document.body.clientHeight - 160 + 'px';\n\n        _this2.initChart();\n\n        _this2.chart = null;\n      });\n    },\n    initChart: function initChart() {\n      this.chart = echarts.init(document.getElementById('incomePayPosition'));\n      var data = {};\n\n      (function () {\n        var xAxisData = [];\n        var seriesIncome = [];\n        var seriesPay = [];\n        var seriesaverage = [];\n\n        for (var i = 1; i < 13; i++) {\n          xAxisData.push(i + '月份');\n        }\n\n        data['xAxisData'] = xAxisData;\n\n        for (var _i = 1; _i < 13; _i++) {\n          seriesIncome.push(Math.round(Math.random() * 10000));\n          seriesPay.push(Math.round(Math.random() * 10000));\n          seriesaverage.push(Math.round(Math.random() * 10000));\n        }\n\n        data['seriesIncome'] = seriesIncome;\n        data['seriesPay'] = seriesPay;\n        data['seriesaverage'] = seriesaverage;\n      })();\n\n      this.chart.setOption({\n        backgroundColor: '#CCFFCC',\n        title: {\n          text: '收支统计',\n          subtext: '单位/万元',\n          x: '4%',\n          textStyle: {\n            color: '#000000',\n            fontSize: '22'\n          },\n          subtextStyle: {\n            color: '#90979c',\n            fontSize: '12'\n          }\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            textStyle: {\n              color: '#fff'\n            }\n          }\n        },\n        grid: {\n          borderWidth: 0,\n          top: 110,\n          bottom: 95,\n          textStyle: {\n            color: '#000000'\n          }\n        },\n        legend: {\n          x: '15%',\n          top: '10%',\n          textStyle: {\n            color: '#90979c'\n          },\n          data: ['收入', '支出', '平均']\n        },\n        calculable: true,\n        xAxis: [{\n          type: 'category',\n          axisLine: {\n            lineStyle: {\n              color: '#0099CC'\n            }\n          },\n          splitLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          },\n          splitArea: {\n            show: false\n          },\n          axisLabel: {\n            interval: 0\n          },\n          data: data.xAxisData\n        }],\n        yAxis: [{\n          type: 'value',\n          splitLine: {\n            show: false\n          },\n          axisLine: {\n            lineStyle: {\n              color: '#0099CC'\n            }\n          },\n          axisTick: {\n            show: false\n          },\n          axisLabel: {\n            interval: 0\n          },\n          splitArea: {\n            show: false\n          }\n        }],\n        dataZoom: [{\n          show: true,\n          height: 30,\n          xAxisIndex: [0],\n          bottom: 30,\n          start: 10,\n          end: 80,\n          handleIcon: 'path://M306.1,413c0,2.2-1.8,4-4,4h-59.8c-2.2,0-4-1.8-4-4V200.8c0-2.2,1.8-4,4-4h59.8c2.2,0,4,1.8,4,4V413z',\n          handleSize: '110%',\n          handleStyle: {\n            color: '#336699'\n          },\n          textStyle: {\n            color: '#000'\n          },\n          borderColor: '#339999'\n        }, {\n          type: 'inside',\n          show: true,\n          height: 15,\n          start: 1,\n          end: 35\n        }],\n        series: [{\n          name: '收入',\n          type: 'bar',\n          stack: '总量',\n          barMaxWidth: 35,\n          barGap: '10%',\n          itemStyle: {\n            normal: {\n              color: '#66CC99',\n              label: {\n                show: true,\n                textStyle: {\n                  color: '#fff'\n                },\n                position: 'insideTop',\n                formatter: function formatter(p) {\n                  return p.value > 0 ? p.value : '';\n                }\n              }\n            }\n          },\n          data: data.seriesIncome\n        }, {\n          name: '支出',\n          type: 'bar',\n          stack: '总量',\n          itemStyle: {\n            normal: {\n              color: '#0099CC',\n              barBorderRadius: 0,\n              label: {\n                show: true,\n                position: 'top',\n                formatter: function formatter(p) {\n                  return p.value > 0 ? p.value : '';\n                }\n              }\n            }\n          },\n          data: data.seriesPay\n        }, {\n          name: '平均',\n          type: 'line',\n          stack: '总量',\n          symbolSize: 10,\n          symbol: 'circle',\n          itemStyle: {\n            normal: {\n              color: '#FF9966',\n              barBorderRadius: 0,\n              label: {\n                show: true,\n                position: 'top',\n                formatter: function formatter(p) {\n                  return p.value > 0 ? p.value : '';\n                }\n              }\n            }\n          },\n          data: data.seriesaverage\n        }]\n      });\n    }\n  }\n};",{"version":3,"sources":["incomePayPosition.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"fillcontain\">\r\n        <div class=\"fillcontainer\" ref=\"fillcontainer\">\r\n           <div id=\"incomePayPosition\" class=\"echartsPosition\"></div> \r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import echarts from 'echarts';\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                chart: null\r\n            };\r\n        },\r\n        mounted() {\r\n            this.setInit();\r\n            // 保证页面在放大或缩小时，也能够动态的显示数据\r\n            window.onresize = () => {\r\n                this.setInit();\r\n            }\r\n        },\r\n        beforeDestroy() {\r\n            if (!this.chart) {\r\n                return\r\n            }\r\n            this.chart.dispose();\r\n            this.chart = null;\r\n        },\r\n        methods: {\r\n            setInit(){\r\n                this.$nextTick(() => {\r\n                    this.$refs.fillcontainer.style.height = (document.body.clientHeight - 160)+'px'\r\n                    this.initChart();\r\n                    this.chart = null;\r\n                });\r\n            },\r\n            initChart() {\r\n                this.chart = echarts.init(document.getElementById('incomePayPosition'));\r\n                const data = {};\r\n                (function() {\r\n                    const xAxisData = [];\r\n                    const seriesIncome = [];\r\n                    const seriesPay = [];\r\n                    const seriesaverage = [];\r\n                    for (let i = 1; i < 13; i++) {\r\n                        xAxisData.push(i + '月份');\r\n                    }\r\n                    data['xAxisData'] = xAxisData;\r\n\r\n                    for (let i = 1; i < 13; i++) {\r\n                       seriesIncome.push(Math.round(Math.random()*10000));\r\n                       seriesPay.push(Math.round(Math.random()*10000));\r\n                       seriesaverage.push(Math.round(Math.random()*10000));\r\n                    }\r\n                     data['seriesIncome'] = seriesIncome;\r\n                     data['seriesPay'] = seriesPay;\r\n                     data['seriesaverage'] = seriesaverage;\r\n                }());\r\n                this.chart.setOption({\r\n                    backgroundColor: '#CCFFCC',\r\n                title: {\r\n                    text: '收支统计',\r\n                    subtext: '单位/万元',\r\n                    x: '4%',\r\n                    textStyle: {\r\n                        color: '#000000',\r\n                        fontSize: '22'\r\n                    },\r\n                    subtextStyle: {\r\n                        color: '#90979c',\r\n                        fontSize: '12'\r\n                    }\r\n                },\r\n                tooltip: { \r\n                    trigger: 'axis',\r\n                    axisPointer: {\r\n                    textStyle: {\r\n                        color: '#fff'\r\n                    }\r\n                    }\r\n                },\r\n                grid: {\r\n                    borderWidth: 0,\r\n                    top: 110,\r\n                    bottom: 95,\r\n                    textStyle: {\r\n                        color: '#000000'\r\n                    }\r\n                },\r\n                legend: {\r\n                    x: '15%',\r\n                    top: '10%',\r\n                    textStyle: {\r\n                        color: '#90979c'\r\n                    },\r\n                    data: ['收入', '支出', '平均']\r\n                },\r\n                calculable: true,\r\n                xAxis: [{\r\n                    type: 'category',\r\n                    axisLine: {\r\n                    lineStyle: {\r\n                        color: '#0099CC'\r\n                    }\r\n                    },\r\n                    splitLine: {\r\n                         show: false\r\n                    },\r\n                    axisTick: {\r\n                         show: false\r\n                    },\r\n                    splitArea: {\r\n                         show: false\r\n                    },\r\n                    axisLabel: {\r\n                    interval: 0\r\n\r\n                    },\r\n                    data: data.xAxisData\r\n                }],\r\n                yAxis: [{\r\n                    type: 'value',\r\n                    splitLine: {\r\n                        show: false\r\n                    },\r\n                    axisLine: {\r\n                    lineStyle: {\r\n                        color: '#0099CC'\r\n                    }\r\n                    },\r\n                    axisTick: {\r\n                        show: false\r\n                    },\r\n                    axisLabel: {\r\n                        interval: 0\r\n                    },\r\n                    splitArea: {\r\n                        show: false\r\n                    }\r\n                }],\r\n                dataZoom: [{\r\n                    show: true,\r\n                    height: 30,\r\n                    xAxisIndex: [\r\n                        0\r\n                    ],\r\n                    bottom: 30,\r\n                    start: 10,\r\n                    end: 80,\r\n                    handleIcon: 'path://M306.1,413c0,2.2-1.8,4-4,4h-59.8c-2.2,0-4-1.8-4-4V200.8c0-2.2,1.8-4,4-4h59.8c2.2,0,4,1.8,4,4V413z',\r\n                    handleSize: '110%',\r\n                    handleStyle: {\r\n                       color: '#336699'\r\n                    },\r\n                    textStyle: {\r\n                       color: '#000' \r\n                    },\r\n                    borderColor: '#339999'\r\n                }, {\r\n                    type: 'inside',\r\n                    show: true,\r\n                    height: 15,\r\n                    start: 1,\r\n                    end: 35\r\n                }],\r\n                series: [{\r\n                    name: '收入',\r\n                    type: 'bar',\r\n                    stack: '总量',\r\n                    barMaxWidth: 35,\r\n                    barGap: '10%',\r\n                    itemStyle: {\r\n                    normal: {\r\n                        color: '#66CC99',\r\n                        label: {\r\n                            show: true,\r\n                            textStyle: {color: '#fff'},\r\n                            position: 'insideTop',\r\n                            formatter(p) {return p.value > 0 ? p.value : '' }\r\n                        }\r\n                    }\r\n                    },\r\n                    data: data.seriesIncome\r\n                },\r\n                {\r\n                    name: '支出',\r\n                    type: 'bar',\r\n                    stack: '总量',\r\n                    itemStyle: {\r\n                    normal: {\r\n                        color: '#0099CC',\r\n                        barBorderRadius: 0,\r\n                        label: {\r\n                        show: true,\r\n                        position: 'top',\r\n                        formatter(p) {\r\n                            return p.value > 0 ? p.value : '';\r\n                        }\r\n                        }\r\n                    }\r\n                    },\r\n                    data:data.seriesPay\r\n                }, {\r\n                    name: '平均',\r\n                    type: 'line',\r\n                    stack: '总量',\r\n                    symbolSize: 10,\r\n                    symbol: 'circle',\r\n                    itemStyle: {\r\n                    normal: {\r\n                        color: '#FF9966',\r\n                        barBorderRadius: 0,\r\n                        label: {\r\n                            show: true,\r\n                            position: 'top',\r\n                            formatter(p) {\r\n                                return p.value > 0 ? p.value : '';\r\n                            }\r\n                        }\r\n                    }\r\n                    },\r\n                    data:data.seriesaverage\r\n                }\r\n                ]\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n\r\n<style lang=\"less\" scoped>\r\n     \r\n</style>\r\n\r\n\r\n"],"sourceRoot":"src/page/fundData"}]}