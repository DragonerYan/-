{"remainingRequest":"D:\\github007\\vue2-element-touzi-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\github007\\vue2-element-touzi-admin\\src\\store\\modules\\user.js","dependencies":[{"path":"D:\\github007\\vue2-element-touzi-admin\\src\\store\\modules\\user.js","mtime":1604132537178},{"path":"D:\\github007\\vue2-element-touzi-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\github007\\vue2-element-touzi-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport * as mUtils from '@/utils/mUtils';\nimport { logout, getUserInfo } from '@/api/user'; // 导入用户信息相关接口\n\nimport { getToken, setToken, removeToken } from '@/utils/auth';\nvar user = {\n  state: {\n    name: '',\n    avatar: '',\n    token: getToken('Token'),\n    roles: [],\n    browserHeaderTitle: mUtils.getStore('browserHeaderTitle') || '小爱Admin'\n  },\n  getters: {\n    token: function token(state) {\n      return state.token;\n    },\n    roles: function roles(state) {\n      return state.roles;\n    },\n    avatar: function avatar(state) {\n      return state.avatar;\n    },\n    name: function name(state) {\n      return state.name;\n    },\n    browserHeaderTitle: function browserHeaderTitle(state) {\n      return state.browserHeaderTitle;\n    }\n  },\n  mutations: {\n    SET_ROLES: function SET_ROLES(state, roles) {\n      state.roles = roles;\n    },\n    SET_BROWSERHEADERTITLE: function SET_BROWSERHEADERTITLE(state, action) {\n      state.browserHeaderTitle = action.browserHeaderTitle;\n    },\n    SET_NAME: function SET_NAME(state, name) {\n      state.name = name;\n    },\n    SET_AVATAR: function SET_AVATAR(state, avatar) {\n      state.avatar = avatar;\n    }\n  },\n  actions: {\n    //登出\n    LogOut: function LogOut(_ref) {\n      var commit = _ref.commit,\n          reqData = _ref.reqData;\n      return new Promise(function (resolve, reject) {\n        logout(reqData).then(function (response) {\n          commit('SET_ROLES', []);\n          removeToken('Token');\n          resolve();\n        });\n      });\n    },\n    // 动态修改权限;本实例中,role和token是相同的;\n    ChangeRoles: function ChangeRoles(_ref2, role) {\n      var commit = _ref2.commit;\n      return new Promise(function (resolve) {\n        var token = role;\n        setToken(\"Token\", token);\n        getUserInfo({\n          \"token\": token\n        }).then(function (res) {\n          var data = res.data.userList;\n          commit('SET_ROLES', data.roles);\n          commit('SET_NAME', data.name);\n          commit('SET_AVATAR', data.avatar);\n          resolve();\n        });\n      });\n    }\n  }\n};\nexport default user;\n/**\r\n * 1、用户退出,需要调取后台接口吗？后台具体的业务逻辑是什么？\r\n * \r\n * \r\n */",{"version":3,"sources":["D:\\github007\\vue2-element-touzi-admin\\src\\store\\modules\\user.js"],"names":["mUtils","logout","getUserInfo","getToken","setToken","removeToken","user","state","name","avatar","token","roles","browserHeaderTitle","getStore","getters","mutations","SET_ROLES","SET_BROWSERHEADERTITLE","action","SET_NAME","SET_AVATAR","actions","LogOut","commit","reqData","Promise","resolve","reject","then","response","ChangeRoles","role","res","data","userList"],"mappings":"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","sourcesContent":["\r\nimport * as mUtils from '@/utils/mUtils'\r\nimport { logout ,getUserInfo } from '@/api/user'  // 导入用户信息相关接口\r\nimport { getToken, setToken, removeToken } from '@/utils/auth'\r\n\r\n\r\nconst user  = {\r\n  state : {\r\n    name:'',\r\n    avatar:'',\r\n    token: getToken('Token'),\r\n    roles: [],\r\n    browserHeaderTitle: mUtils.getStore('browserHeaderTitle') || '小爱Admin'\r\n  },\r\n  getters : {\r\n    token: state => state.token,\r\n    roles: state => state.roles,\r\n    avatar: state => state.avatar,\r\n    name: state => state.name,\r\n    browserHeaderTitle: state => state.browserHeaderTitle,\r\n  },\r\n  mutations: {\r\n    SET_ROLES: (state, roles) => {\r\n        state.roles = roles\r\n    },\r\n    SET_BROWSERHEADERTITLE: (state, action) => {\r\n        state.browserHeaderTitle = action.browserHeaderTitle\r\n    },\r\n    SET_NAME: (state, name) => {\r\n      state.name = name\r\n    },\r\n    SET_AVATAR: (state, avatar) => {\r\n      state.avatar = avatar\r\n    }\r\n  },\r\n  actions:{\r\n      //登出\r\n      LogOut({ commit, reqData }) {\r\n        return new Promise((resolve, reject) => {\r\n          logout(reqData).then(response => {\r\n            commit('SET_ROLES', [])\r\n            removeToken('Token')\r\n            resolve()\r\n          })\r\n        })\r\n      },\r\n      // 动态修改权限;本实例中,role和token是相同的;\r\n      ChangeRoles({ commit }, role) {\r\n        return new Promise(resolve => {\r\n          const token = role;\r\n          setToken(\"Token\",token)\r\n          getUserInfo({\"token\":token}).then(res => {\r\n            let data = res.data.userList;\r\n            commit('SET_ROLES', data.roles)\r\n            commit('SET_NAME', data.name)\r\n            commit('SET_AVATAR', data.avatar)\r\n            resolve()\r\n          })\r\n        })\r\n      },\r\n      \r\n  }\r\n}\r\n\r\nexport default user;\r\n\r\n/**\r\n * 1、用户退出,需要调取后台接口吗？后台具体的业务逻辑是什么？\r\n * \r\n * \r\n */"]}]}