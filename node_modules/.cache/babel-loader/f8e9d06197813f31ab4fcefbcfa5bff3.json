{"remainingRequest":"D:\\github007\\vue2-element-touzi-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\github007\\vue2-element-touzi-admin\\src\\mockjs\\money.js","dependencies":[{"path":"D:\\github007\\vue2-element-touzi-admin\\src\\mockjs\\money.js","mtime":1604132537156},{"path":"D:\\github007\\vue2-element-touzi-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\github007\\vue2-element-touzi-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\nimport Mock from 'mockjs';\nimport * as mUtils from '@/utils/mUtils';\nvar List = [];\nvar count = 60;\nvar typelist = [1, 2, 3, 4, 5, 6, 7, 8];\n\nfor (var i = 0; i < count; i++) {\n  List.push(Mock.mock({\n    id: Mock.Random.guid(),\n    username: Mock.Random.cname(),\n    address: Mock.mock('@county(true)'),\n    createTime: Mock.Random.datetime(),\n    income: Mock.Random.integer(0, 9999),\n    pay: Mock.Random.integer(0, 9999),\n    accoutCash: Mock.Random.integer(0, 9999),\n    'incomePayType|1': typelist\n  }));\n}\n\nexport default {\n  /**\r\n   * 获取列表\r\n   * 要带参数 name, page, limt; name可以不填, page,limit有默认值。\r\n   * @param name, page, limit\r\n   * @return {{code: number, count: number, data: *[]}}\r\n   */\n  getMoneyList: function getMoneyList(config) {\n    var _mUtils$param2Obj = mUtils.param2Obj(config.url),\n        name = _mUtils$param2Obj.name,\n        _mUtils$param2Obj$pag = _mUtils$param2Obj.page,\n        page = _mUtils$param2Obj$pag === void 0 ? 1 : _mUtils$param2Obj$pag,\n        _mUtils$param2Obj$lim = _mUtils$param2Obj.limit,\n        limit = _mUtils$param2Obj$lim === void 0 ? 20 : _mUtils$param2Obj$lim;\n\n    var mockList = List.filter(function (user) {\n      if (name && user.username.indexOf(name) === -1) return false;\n      return true;\n    });\n    var pageList = mockList.filter(function (item, index) {\n      return index < limit * page && index >= limit * (page - 1);\n    });\n    return {\n      code: 200,\n      data: {\n        total: mockList.length,\n        moneyList: pageList\n      }\n    };\n  },\n\n  /**\r\n   * 增加资金信息\r\n   * @param username, address, createTime, income, pay , accoutCash, incomePayType\r\n   * @return {{code: number, data: {message: string}}}\r\n   */\n  createMoney: function createMoney(config) {\n    var _mUtils$param2Obj2 = mUtils.param2Obj(config.url),\n        username = _mUtils$param2Obj2.username,\n        address = _mUtils$param2Obj2.address,\n        income = _mUtils$param2Obj2.income,\n        pay = _mUtils$param2Obj2.pay,\n        accoutCash = _mUtils$param2Obj2.accoutCash,\n        incomePayType = _mUtils$param2Obj2.incomePayType,\n        tableAddress = _mUtils$param2Obj2.tableAddress;\n\n    List.unshift({\n      id: Mock.Random.guid(),\n      username: username,\n      address: address,\n      tableAddress: tableAddress,\n      createTime: Mock.Random.now(),\n      income: income,\n      pay: pay,\n      accoutCash: accoutCash,\n      incomePayType: incomePayType\n    });\n    return {\n      code: 200,\n      data: {\n        message: '添加成功'\n      }\n    };\n  },\n\n  /**\r\n   * 删除用户\r\n   * @param id\r\n   * @return {*}\r\n   */\n  deleteMoney: function deleteMoney(config) {\n    var _mUtils$param2Obj3 = mUtils.param2Obj(config.url),\n        id = _mUtils$param2Obj3.id;\n\n    if (!id) {\n      return {\n        code: -999,\n        message: '参数不正确'\n      };\n    } else {\n      List = List.filter(function (u) {\n        return u.id !== id;\n      });\n      return {\n        code: 200,\n        data: {\n          message: '删除成功'\n        }\n      };\n    }\n  },\n\n  /**\r\n   * 批量删除\r\n   * @param config\r\n   * @return {{code: number, data: {message: string}}}\r\n   */\n  batchremoveMoney: function batchremoveMoney(config) {\n    console.log(config); // console.log(mUtils.param2Obj(config.url));\n\n    var _mUtils$param2Obj4 = mUtils.param2Obj(config.url),\n        ids = _mUtils$param2Obj4.ids;\n\n    console.log(ids);\n    ids = ids.split(',');\n    List = List.filter(function (u) {\n      return !ids.includes(u.id);\n    });\n    return {\n      code: 200,\n      data: {\n        message: '批量删除成功'\n      }\n    };\n  },\n\n  /**\r\n   * 修改用户\r\n   * @param id, name, addr, age, birth, sex\r\n   * @return {{code: number, data: {message: string}}}\r\n   */\n  updateMoney: function updateMoney(config) {\n    var _mUtils$param2Obj5 = mUtils.param2Obj(config.url),\n        id = _mUtils$param2Obj5.id,\n        username = _mUtils$param2Obj5.username,\n        address = _mUtils$param2Obj5.address,\n        income = _mUtils$param2Obj5.income,\n        pay = _mUtils$param2Obj5.pay,\n        accoutCash = _mUtils$param2Obj5.accoutCash,\n        incomePayType = _mUtils$param2Obj5.incomePayType;\n\n    List.some(function (u) {\n      if (u.id === id) {\n        u.username = username;\n        u.address = address;\n        u.income = income;\n        u.pay = pay;\n        u.accoutCash = accoutCash;\n        u.incomePayType = incomePayType;\n        return true;\n      }\n    });\n    return {\n      code: 200,\n      data: {\n        message: '编辑成功'\n      }\n    };\n  }\n};",{"version":3,"sources":["D:\\github007\\vue2-element-touzi-admin\\src\\mockjs\\money.js"],"names":["Mock","mUtils","List","count","typelist","i","push","mock","id","Random","guid","username","cname","address","createTime","datetime","income","integer","pay","accoutCash","getMoneyList","config","param2Obj","url","name","page","limit","mockList","filter","user","indexOf","pageList","item","index","code","data","total","length","moneyList","createMoney","incomePayType","tableAddress","unshift","now","message","deleteMoney","u","batchremoveMoney","console","log","ids","split","includes","updateMoney","some"],"mappings":"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","sourcesContent":["import Mock from 'mockjs'\r\n\r\nimport * as mUtils from '@/utils/mUtils'\r\n\r\n\r\nlet List = []\r\nconst count = 60\r\nlet typelist = [1, 2, 3, 4, 5, 6, 7, 8]\r\n\r\nfor (let i = 0; i < count; i++) {\r\n  List.push(Mock.mock({\r\n    id: Mock.Random.guid(),\r\n    username: Mock.Random.cname(),\r\n    address: Mock.mock('@county(true)'),\r\n    createTime: Mock.Random.datetime(),\r\n    income: Mock.Random.integer(0, 9999),\r\n    pay: Mock.Random.integer(0, 9999), \r\n    accoutCash: Mock.Random.integer(0, 9999),\r\n    'incomePayType|1': typelist\r\n  }))\r\n}\r\n\r\nexport default {\r\n  /**\r\n   * 获取列表\r\n   * 要带参数 name, page, limt; name可以不填, page,limit有默认值。\r\n   * @param name, page, limit\r\n   * @return {{code: number, count: number, data: *[]}}\r\n   */\r\n  getMoneyList: config => {\r\n    const { name, page = 1, limit = 20 } = mUtils.param2Obj(config.url)\r\n    const mockList = List.filter(user => {\r\n      if (name && user.username.indexOf(name) === -1) return false\r\n      return true\r\n    })\r\n    const pageList = mockList.filter((item, index) => index < limit * page && index >= limit * (page - 1))\r\n    return {\r\n      code: 200,\r\n      data: {\r\n        total: mockList.length,\r\n        moneyList: pageList\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 增加资金信息\r\n   * @param username, address, createTime, income, pay , accoutCash, incomePayType\r\n   * @return {{code: number, data: {message: string}}}\r\n   */\r\n  createMoney: config => {\r\n    const { username, address, income, pay , accoutCash, incomePayType,tableAddress } = mUtils.param2Obj(config.url)\r\n    List.unshift({\r\n      id: Mock.Random.guid(),\r\n      username: username,\r\n      address: address,\r\n      tableAddress:tableAddress,\r\n      createTime: Mock.Random.now(),\r\n      income: income,\r\n      pay: pay,\r\n      accoutCash: accoutCash,\r\n      incomePayType: incomePayType\r\n    })\r\n    return {\r\n      code: 200,\r\n      data: {\r\n        message: '添加成功'\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 删除用户\r\n   * @param id\r\n   * @return {*}\r\n   */\r\n  deleteMoney: config => {\r\n    const { id } = mUtils.param2Obj(config.url)\r\n    if (!id) {\r\n      return {\r\n        code: -999,\r\n        message: '参数不正确'\r\n      }\r\n    } else {\r\n      List = List.filter(u => u.id !== id)\r\n      return {\r\n        code: 200,\r\n        data: {\r\n          message: '删除成功'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 批量删除\r\n   * @param config\r\n   * @return {{code: number, data: {message: string}}}\r\n   */\r\n  batchremoveMoney: config => {\r\n    console.log(config);\r\n    // console.log(mUtils.param2Obj(config.url));\r\n    let { ids } = mUtils.param2Obj(config.url)\r\n    console.log(ids);\r\n    ids = ids.split(',')\r\n    List = List.filter(u => !ids.includes(u.id))\r\n    return {\r\n      code: 200,\r\n      data: {\r\n        message: '批量删除成功'\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 修改用户\r\n   * @param id, name, addr, age, birth, sex\r\n   * @return {{code: number, data: {message: string}}}\r\n   */\r\n  updateMoney: config => {\r\n    const { id,username, address, income, pay , accoutCash, incomePayType } = mUtils.param2Obj(config.url)\r\n    List.some(u => {\r\n      if (u.id === id) {\r\n        u.username = username\r\n        u.address = address\r\n        u.income = income\r\n        u.pay = pay\r\n        u.accoutCash = accoutCash\r\n        u.incomePayType = incomePayType\r\n        return true\r\n      }\r\n    })\r\n    return {\r\n      code: 200,\r\n      data: {\r\n        message: '编辑成功'\r\n      }\r\n    }\r\n  }\r\n}"]}]}