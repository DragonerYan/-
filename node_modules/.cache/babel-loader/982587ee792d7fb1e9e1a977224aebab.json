{"remainingRequest":"D:\\github007\\vue2-element-touzi-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\github007\\vue2-element-touzi-admin\\src\\utils\\axios.js","dependencies":[{"path":"D:\\github007\\vue2-element-touzi-admin\\src\\utils\\axios.js","mtime":1604132537181},{"path":"D:\\github007\\vue2-element-touzi-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\github007\\vue2-element-touzi-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport { Message, MessageBox } from 'element-ui';\nimport store from \"../store\";\nimport { getToken } from '@/utils/auth'; // 创建axios实例\n\nvar service = axios.create({\n  baseURL: process.env.BASE_API,\n  // api的base_url\n  timeout: 5000 // 请求超时时间\n\n}); // request拦截器\n\nservice.interceptors.request.use(function (config) {\n  if (store.getters.token) {\n    config.headers = {\n      'Authorization': \"Token \" + getToken('Token') //携带权限参数\n\n    };\n  }\n\n  return config;\n}, function (error) {\n  Promise.reject(error);\n}); // respone拦截器\n\nservice.interceptors.response.use(function (response) {\n  /**\r\n   * code:200,接口正常返回;\r\n   */\n  var res = response.data;\n\n  if (res.code !== 200) {\n    Message({\n      message: res.message,\n      type: 'error',\n      duration: 5 * 1000\n    }); // 根据服务端约定的状态码：5001:非法的token; 5002:其他客户端登录了; 5004:Token 过期了;\n\n    if (res.code === 5001 || res.code === 5002 || res.code === 5004) {\n      MessageBox.confirm('你已被登出，可以取消继续留在该页面，或者重新登录', '确定登出', {\n        confirmButtonText: '重新登录',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        store.dispatch('LogOut').then(function () {\n          location.reload(); // 为了重新实例化vue-router对象 避免bug\n        });\n      });\n    }\n\n    return Promise.reject('error');\n  } else {\n    // res.code === 200,正常返回数据\n    return response.data;\n  }\n}, function (error) {\n  Message({\n    message: error.message,\n    type: 'error',\n    duration: 5 * 1000\n  });\n  return Promise.reject(error);\n});\nexport default service;",{"version":3,"sources":["D:\\github007\\vue2-element-touzi-admin\\src\\utils\\axios.js"],"names":["axios","Message","MessageBox","store","getToken","service","create","baseURL","process","env","BASE_API","timeout","interceptors","request","use","config","getters","token","headers","error","Promise","reject","response","res","data","code","message","type","duration","confirm","confirmButtonText","cancelButtonText","then","dispatch","location","reload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,YAApC;AACA,OAAOC,KAAP;AACA,SAASC,QAAT,QAAyB,cAAzB,C,CAEA;;AACA,IAAIC,OAAO,GAAIL,KAAK,CAACM,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,QADK;AACK;AAC/BC,EAAAA,OAAO,EAAE,IAFiB,CAEZ;;AAFY,CAAb,CAAf,C,CAIA;;AACAN,OAAO,CAACO,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAiC,UAAAC,MAAM,EAAI;AACzC,MAAIZ,KAAK,CAACa,OAAN,CAAcC,KAAlB,EAAyB;AACvBF,IAAAA,MAAM,CAACG,OAAP,GAAiB;AACf,uBAAkB,WAAWd,QAAQ,CAAC,OAAD,CADtB,CACiC;;AADjC,KAAjB;AAGD;;AACD,SAAOW,MAAP;AACD,CAPD,EAOG,UAAAI,KAAK,EAAI;AACVC,EAAAA,OAAO,CAACC,MAAR,CAAeF,KAAf;AACD,CATD,E,CAWA;;AACAd,OAAO,CAACO,YAAR,CAAqBU,QAArB,CAA8BR,GAA9B,CACE,UAAAQ,QAAQ,EAAI;AACX;;;AAGC,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAArB;;AACA,MAAID,GAAG,CAACE,IAAJ,KAAa,GAAjB,EAAsB;AACpBxB,IAAAA,OAAO,CAAC;AACNyB,MAAAA,OAAO,EAAEH,GAAG,CAACG,OADP;AAENC,MAAAA,IAAI,EAAE,OAFA;AAGNC,MAAAA,QAAQ,EAAE,IAAI;AAHR,KAAD,CAAP,CADoB,CAMpB;;AACA,QAAIL,GAAG,CAACE,IAAJ,KAAa,IAAb,IAAqBF,GAAG,CAACE,IAAJ,KAAa,IAAlC,IAA0CF,GAAG,CAACE,IAAJ,KAAa,IAA3D,EAAiE;AAC7DvB,MAAAA,UAAU,CAAC2B,OAAX,CAAmB,0BAAnB,EAA+C,MAA/C,EAAuD;AACrDC,QAAAA,iBAAiB,EAAE,MADkC;AAErDC,QAAAA,gBAAgB,EAAE,IAFmC;AAGrDJ,QAAAA,IAAI,EAAE;AAH+C,OAAvD,EAIGK,IAJH,CAIQ,YAAM;AACZ7B,QAAAA,KAAK,CAAC8B,QAAN,CAAe,QAAf,EAAyBD,IAAzB,CAA8B,YAAM;AAClCE,UAAAA,QAAQ,CAACC,MAAT,GADkC,CACjB;AAClB,SAFD;AAGD,OARD;AASH;;AACD,WAAOf,OAAO,CAACC,MAAR,CAAe,OAAf,CAAP;AACD,GAnBD,MAmBO;AAAE;AACL,WAAOC,QAAQ,CAACE,IAAhB;AACH;AACF,CA5BH,EA6BE,UAAAL,KAAK,EAAI;AACPlB,EAAAA,OAAO,CAAC;AACNyB,IAAAA,OAAO,EAAEP,KAAK,CAACO,OADT;AAENC,IAAAA,IAAI,EAAE,OAFA;AAGNC,IAAAA,QAAQ,EAAE,IAAI;AAHR,GAAD,CAAP;AAKA,SAAOR,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CApCH;AAuCA,eAAed,OAAf","sourcesContent":["import axios from 'axios'\r\nimport { Message, MessageBox } from 'element-ui'\r\nimport store from '../store'\r\nimport { getToken } from '@/utils/auth'\r\n\r\n// 创建axios实例\r\nlet service =  axios.create({\r\n  baseURL: process.env.BASE_API, // api的base_url\r\n  timeout: 5000 // 请求超时时间\r\n})\r\n// request拦截器\r\nservice.interceptors.request.use(config => {\r\n  if (store.getters.token) {\r\n    config.headers = {\r\n      'Authorization' : \"Token \" + getToken('Token'), //携带权限参数\r\n     };\r\n  }\r\n  return config\r\n}, error => {\r\n  Promise.reject(error)\r\n})\r\n\r\n// respone拦截器\r\nservice.interceptors.response.use(\r\n  response => {\r\n   /**\r\n    * code:200,接口正常返回;\r\n    */\r\n    const res = response.data\r\n    if (res.code !== 200) {\r\n      Message({\r\n        message: res.message,\r\n        type: 'error',\r\n        duration: 5 * 1000\r\n      })\r\n      // 根据服务端约定的状态码：5001:非法的token; 5002:其他客户端登录了; 5004:Token 过期了;\r\n      if (res.code === 5001 || res.code === 5002 || res.code === 5004) {\r\n          MessageBox.confirm('你已被登出，可以取消继续留在该页面，或者重新登录', '确定登出', {\r\n            confirmButtonText: '重新登录',\r\n            cancelButtonText: '取消',\r\n            type: 'warning'\r\n          }).then(() => {\r\n            store.dispatch('LogOut').then(() => {\r\n              location.reload()// 为了重新实例化vue-router对象 避免bug\r\n            })\r\n          })\r\n      }\r\n      return Promise.reject('error')\r\n    } else { // res.code === 200,正常返回数据\r\n        return response.data\r\n    }\r\n  },\r\n  error => {\r\n    Message({\r\n      message: error.message,\r\n      type: 'error',\r\n      duration: 5 * 1000\r\n    })\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default service\r\n"]}]}