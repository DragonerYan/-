{"remainingRequest":"D:\\github007\\vue2-element-touzi-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\github007\\vue2-element-touzi-admin\\src\\mockjs\\user.js","dependencies":[{"path":"D:\\github007\\vue2-element-touzi-admin\\src\\mockjs\\user.js","mtime":1604132537156},{"path":"D:\\github007\\vue2-element-touzi-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\github007\\vue2-element-touzi-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Mock from 'mockjs';\nimport * as mUtils from '@/utils/mUtils';\nvar List = [];\nvar count = 1000;\nvar typelist = ['联通', '移动', '电信', '铁通'];\n\nfor (var i = 0; i < count; i++) {\n  List.push(Mock.mock({\n    id: Mock.Random.guid(),\n    sortnum: i + 1,\n    username: Mock.Random.cname(),\n    address: Mock.mock('@county(true)'),\n    createTime: Mock.Random.datetime(),\n    updateTime: Mock.Random.now(),\n    ip: Mock.mock('@ip'),\n    region: Mock.mock('@region'),\n    areaId: /\\d{7}/,\n    email: Mock.Random.email(),\n    'isp|1': typelist\n  }));\n}\n\nexport default {\n  // 用户登录\n  login: function login(config) {\n    var data = JSON.parse(config.body);\n    var userList = {};\n\n    if (data.username === 'admin') {\n      userList = {\n        token: 'admin',\n        name: '管理员'\n      };\n    } else if (data.username === 'editor') {\n      userList = {\n        token: 'editor',\n        name: '赵晓编'\n      };\n    } else {\n      return {\n        code: -1,\n        data: {\n          msg: \"用户名错误\",\n          status: 'fail'\n        }\n      };\n    }\n\n    return {\n      code: 200,\n      data: {\n        userList: userList\n      }\n    };\n  },\n  // 用户登出\n  logout: function logout(config) {\n    return {\n      code: 200,\n      data: {\n        userList: \"\"\n      }\n    };\n  },\n  // 获取登录用户信息\n  getUserInfo: function getUserInfo(config) {\n    var data = JSON.parse(config.body);\n    var userList = {};\n\n    if (data.token === 'admin') {\n      userList = {\n        roles: ['admin'],\n        name: 'admin',\n        avatar: 'https://wx.qlogo.cn/mmopen/vi_32/un2HbJJc6eiaviaibvMgiasFNlVDlNOb9E6WCpCrsO4wMMhHIbsvTkAbIehLwROVFlu8dLMcg00t3ZtOcgCCdcxlZA/132'\n      };\n    } else if (data.token === 'editor') {\n      userList = {\n        roles: ['editor'],\n        name: 'editor',\n        avatar: 'https://mirror-gold-cdn.xitu.io/168e088859e325b9d85?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1'\n      };\n    } else {\n      userList = {};\n    }\n\n    return {\n      code: 200,\n      data: {\n        userList: userList\n      }\n    };\n  },\n\n  /**\r\n  * 获取用户列表\r\n  * 要带参数 name, page, limt; name可以不填, page,limit有默认值。\r\n  * @param name, page, limit\r\n  * @return {{code: number, count: number, data: *[]}}\r\n  */\n  getUserList: function getUserList(config) {\n    var _JSON$parse = JSON.parse(config.body),\n        limit = _JSON$parse.limit,\n        page = _JSON$parse.page;\n\n    var mockList = List;\n    var userList = mockList.filter(function (item, index) {\n      return index < limit * page && index >= limit * (page - 1);\n    });\n    return {\n      code: 200,\n      data: {\n        total: mockList.length,\n        userList: userList\n      }\n    };\n  }\n};",{"version":3,"sources":["D:\\github007\\vue2-element-touzi-admin\\src\\mockjs\\user.js"],"names":["Mock","mUtils","List","count","typelist","i","push","mock","id","Random","guid","sortnum","username","cname","address","createTime","datetime","updateTime","now","ip","region","areaId","email","login","config","data","JSON","parse","body","userList","token","name","code","msg","status","logout","getUserInfo","roles","avatar","getUserList","limit","page","mockList","filter","item","index","total","length"],"mappings":"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","sourcesContent":["import Mock from 'mockjs'\r\nimport * as mUtils from '@/utils/mUtils'\r\n\r\n\r\nlet List = []\r\nconst count = 1000\r\nlet typelist = ['联通', '移动', '电信', '铁通']\r\n\r\nfor (let i = 0; i < count; i++) {\r\n  List.push(Mock.mock({\r\n    id: Mock.Random.guid(),\r\n    sortnum: i + 1,\r\n    username: Mock.Random.cname(),\r\n    address: Mock.mock('@county(true)'),\r\n    createTime: Mock.Random.datetime(),\r\n    updateTime: Mock.Random.now(),\r\n    ip:Mock.mock('@ip'),\r\n    region:Mock.mock('@region'),\r\n    areaId:/\\d{7}/,\r\n    email: Mock.Random.email(),\r\n    'isp|1': typelist\r\n  }))\r\n}\r\n\r\nexport default {\r\n  // 用户登录\r\n  login: config => {\r\n    let data = JSON.parse(config.body);\r\n    let userList = {};\r\n    if(data.username === 'admin'){\r\n        userList = {\r\n            token:'admin',\r\n            name:'管理员',\r\n        }\r\n    }else if(data.username === 'editor'){\r\n        userList = {\r\n            token:'editor',\r\n            name:'赵晓编',\r\n        }\r\n    }else{\r\n       return {\r\n        code: -1,\r\n        data: {\r\n          msg: \"用户名错误\",\r\n          status:'fail'\r\n        }\r\n       }\r\n    }\r\n    return {\r\n      code: 200,\r\n      data: {\r\n        userList: userList\r\n      }\r\n    }\r\n  },\r\n   // 用户登出\r\n   logout: config => {\r\n    return {\r\n      code: 200,\r\n      data: {\r\n        userList: \"\"\r\n      }\r\n    }\r\n  },\r\n  // 获取登录用户信息\r\n  getUserInfo:config => {\r\n    let data = JSON.parse(config.body);\r\n    let userList = {};\r\n    if(data.token === 'admin'){\r\n        userList = {\r\n            roles: ['admin'],\r\n            name:'admin',\r\n            avatar:'https://wx.qlogo.cn/mmopen/vi_32/un2HbJJc6eiaviaibvMgiasFNlVDlNOb9E6WCpCrsO4wMMhHIbsvTkAbIehLwROVFlu8dLMcg00t3ZtOcgCCdcxlZA/132'\r\n        }\r\n    }else if(data.token === 'editor'){\r\n        userList = {\r\n            roles: ['editor'],\r\n            name:'editor',\r\n            avatar:'https://mirror-gold-cdn.xitu.io/168e088859e325b9d85?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1'\r\n        }\r\n    }else{\r\n        userList = {}\r\n    }\r\n    return {\r\n      code: 200,\r\n      data: {\r\n        userList: userList\r\n      }\r\n    }\r\n  },\r\n   /**\r\n   * 获取用户列表\r\n   * 要带参数 name, page, limt; name可以不填, page,limit有默认值。\r\n   * @param name, page, limit\r\n   * @return {{code: number, count: number, data: *[]}}\r\n   */\r\n  getUserList:config => {\r\n    const { limit , page } = JSON.parse(config.body);\r\n    let mockList = List;\r\n    const userList = mockList.filter((item, index) => index < limit * page && index >= limit * (page - 1))\r\n    return {\r\n      code: 200,\r\n      data: {\r\n        total: mockList.length,\r\n        userList: userList\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n}"]}]}