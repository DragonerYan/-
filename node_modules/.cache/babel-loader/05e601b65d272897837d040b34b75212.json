{"remainingRequest":"D:\\github007\\vue2-element-touzi-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\github007\\vue2-element-touzi-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\github007\\vue2-element-touzi-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\github007\\vue2-element-touzi-admin\\src\\page\\permission\\directive.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\github007\\vue2-element-touzi-admin\\src\\page\\permission\\directive.vue","mtime":1604132537169},{"path":"D:\\github007\\vue2-element-touzi-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\github007\\vue2-element-touzi-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\github007\\vue2-element-touzi-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\github007\\vue2-element-touzi-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport permission from '@/directive/permission/index.js'; // 权限判断指令\n\nimport SwitchRoles from \"./components/SwitchRoles\";\nimport * as mutils from '@/utils/mUtils';\nexport default {\n  name: 'directivePermission',\n  components: {\n    SwitchRoles: SwitchRoles\n  },\n  directives: {\n    permission: permission\n  },\n  data: function data() {\n    return {\n      key: 1 // 为了能每次切换权限的时候重新初始化指令\n\n    };\n  },\n  mounted: function mounted() {\n    mutils.setContentHeight(this, this.$refs.contain, 210);\n  },\n  methods: {\n    handleRolesChange: function handleRolesChange() {\n      this.key++;\n    }\n  }\n  /**\r\n   * 添加按钮权限的业务逻辑：\r\n   * 1、在需要添加权限的按钮上或按钮区域内,注册全局指令v-permission=\"['admin']\",接收的值为数组形式;\r\n   * 2、指令内部的计算逻辑(参考directive/permission/permisson.js)：\r\n   *   通过inserted函数，当被绑定的元素插入到DOM中时，如果指令的value为数组形式并传入roles信息时，\r\n   *   用户当前roles与指令roles，进行循环匹配，只要能匹配到就返回true;不能匹配，则隐藏该元素;\r\n   * 3、全局注册指令：Vue.directive('permission', permission)\r\n   * 4、Vue.use(install);\r\n   * \r\n   */\n\n};",{"version":3,"sources":["directive.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,OAAA,UAAA,MAAA,iCAAA,C,CAAA;;AACA,OAAA,WAAA;AACA,OAAA,KAAA,MAAA,MAAA,gBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,qBADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,WAAA,EAAA;AAAA,GAFA;AAGA,EAAA,UAAA,EAAA;AAAA,IAAA,UAAA,EAAA;AAAA,GAHA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,GAAA,EAAA,CADA,CACA;;AADA,KAAA;AAGA,GARA;AASA,EAAA,OATA,qBASA;AACA,IAAA,MAAA,CAAA,gBAAA,CAAA,IAAA,EAAA,KAAA,KAAA,CAAA,OAAA,EAAA,GAAA;AACA,GAXA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,iBADA,+BACA;AACA,WAAA,GAAA;AACA;AAHA;AAOA;;;;;;;;;;;AAnBA,CAAA","sourcesContent":["<template>\r\n  <div class=\"fillcontain\">\r\n    <div class=\"contain\" ref=\"contain\">\r\n      <switch-roles @change=\"handleRolesChange\" />\r\n      <div :key=\"key\" class=\"cflex\">\r\n        <span v-permission=\"['admin']\" class=\"permission-alert\">\r\n          Only admin can see this\r\n          <el-button type=\"warning\">admin</el-button>\r\n          <el-button type=\"danger\">危险按钮</el-button>\r\n        </span>\r\n\r\n        <span  v-permission=\"['editor']\"  class=\"permission-alert\">\r\n          Only editor can see this\r\n          <el-button type=\"success\">编辑</el-button>\r\n          <el-button type=\"info\">信息按钮</el-button>\r\n        </span>\r\n\r\n        <span v-permission=\"['admin','editor']\" class=\"permission-alert\">\r\n          Both adminand editor can see this\r\n          <el-button type=\"primary\">主要按钮</el-button>\r\n          <el-button type=\"success\">成功按钮</el-button>\r\n          <el-button type=\"info\">信息按钮</el-button>\r\n          <el-button type=\"warning\">警告按钮</el-button>\r\n          <el-button type=\"danger\">危险按钮</el-button>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport permission from '@/directive/permission/index.js' // 权限判断指令\r\nimport SwitchRoles from './components/SwitchRoles'\r\nimport * as mutils from '@/utils/mUtils'\r\n\r\nexport default {\r\n  name: 'directivePermission',\r\n  components: { SwitchRoles },\r\n  directives: { permission },\r\n  data() {\r\n    return {\r\n      key: 1 // 为了能每次切换权限的时候重新初始化指令\r\n    }\r\n  },\r\n  mounted(){\r\n    mutils.setContentHeight(this,this.$refs.contain,210);\r\n  },\r\n  methods: {\r\n    handleRolesChange() {\r\n      this.key++\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 添加按钮权限的业务逻辑：\r\n * 1、在需要添加权限的按钮上或按钮区域内,注册全局指令v-permission=\"['admin']\",接收的值为数组形式;\r\n * 2、指令内部的计算逻辑(参考directive/permission/permisson.js)：\r\n *   通过inserted函数，当被绑定的元素插入到DOM中时，如果指令的value为数组形式并传入roles信息时，\r\n *   用户当前roles与指令roles，进行循环匹配，只要能匹配到就返回true;不能匹配，则隐藏该元素;\r\n * 3、全局注册指令：Vue.directive('permission', permission)\r\n * 4、Vue.use(install);\r\n * \r\n */\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.fillcontain {\r\n  .contain{\r\n    background: #fff;\r\n    padding: 20px;\r\n    box-sizing: border-box;\r\n  }\r\n  .cflex{\r\n    .permission-alert{\r\n       margin-bottom: 20px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n\r\n"],"sourceRoot":"src/page/permission"}]}